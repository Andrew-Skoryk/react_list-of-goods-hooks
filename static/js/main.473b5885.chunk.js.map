{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","name","id","App","useState","NONE","sortType","setSortType","isReversed","setReverse","originalOrder","reorderedGoods","goods","visibleGoods","sort","prevGoods","currGoods","prevName","currName","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","prev","map","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,CAAEC,KAAM,YAAaC,GAAI,GACzB,CAAED,KAAM,SAAUC,GAAI,GACtB,CAAED,KAAM,OAAQC,GAAI,GACpB,CAAED,KAAM,YAAaC,GAAI,GACzB,CAAED,KAAM,QAASC,GAAI,GACrB,CAAED,KAAM,QAASC,GAAI,GACrB,CAAED,KAAM,OAAQC,GAAI,GACpB,CAAED,KAAM,QAASC,GAAI,GACrB,CAAED,KAAM,MAAOC,GAAI,GACnB,CAAED,KAAM,SAAUC,GAAI,M,SAGnBH,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAMI,EAAU,WACrB,MAAgCC,mBAASL,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAgBJ,IAAaP,EAASM,OAAuB,IAAfG,EAC9CG,EAlCD,SACLC,EADK,GAGJ,IADCN,EACF,EADEA,SAAUE,EACZ,EADYA,WAENK,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,IAAMC,EAAWF,EAAUd,KACrBiB,EAAWF,EAAUf,KAE3B,OAAQK,GACN,KAAKP,EAASoB,QACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKnB,EAASsB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAITd,GACFK,EAAaU,UAGRV,EAQgBW,CACrBxB,EACA,CAAEM,WAAUE,eAoBd,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYrB,IAAaP,EAASoB,UAGtCS,QA5Be,WACrBrB,EAAYR,EAASoB,UAmBjB,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYrB,IAAaP,EAASsB,SAGtCO,QArCa,WACnBrB,EAAYR,EAASsB,SA4BjB,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAfnB,IAGhBoB,QA9Cc,WACpBnB,GAAW,SAAAoB,GAAI,OAAKA,MAqChB,qBAaCnB,GAEC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QApDU,WAClBnB,GAAW,GACXF,EAAYR,EAASM,OA+Cf,sBAUJ,6BACGM,EAAemB,KAAI,gBAAG7B,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAClB,oBAAI,UAAQ,OAAZ,SACGD,GADqBC,YC3IlC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.473b5885.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Good } from './react-app-env';\n\nexport const goodsFromServer = [\n  { name: 'Dumplings', id: 1 },\n  { name: 'Carrot', id: 2 },\n  { name: 'Eggs', id: 3 },\n  { name: 'Ice cream', id: 4 },\n  { name: 'Apple', id: 5 },\n  { name: 'Bread', id: 6 },\n  { name: 'Fish', id: 7 },\n  { name: 'Honey', id: 8 },\n  { name: 'Jam', id: 9 },\n  { name: 'Garlic', id: 10 },\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: Good[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGoods, currGoods) => {\n    const prevName = prevGoods.name;\n    const currName = currGoods.name;\n\n    switch (sortType) {\n      case SortType.ALPABET:\n        return prevName.localeCompare(currName);\n\n      case SortType.LENGTH:\n        return prevName.length - currName.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const originalOrder = sortType !== SortType.NONE || isReversed !== false;\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setReverse(prev => !prev);\n  };\n\n  const handleReset = () => {\n    setReverse(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': isReversed === false,\n            },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {originalOrder\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map(({ name, id }) => (\n          <li data-cy=\"Good\" key={id}>\n            {name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}